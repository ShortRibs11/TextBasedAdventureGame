#include <stdio.h>
#include <string.h>
#include "object.h"
#include "move.h"
#include "toggle.h"
#include "onoff.h"
#include "combat.h"
#include "consumables.h"
#include "string_util.h"

typedef struct object {
	int				 (*condition)(void);
	const char    *description;
	const char   **tags;
	struct object *location;
	struct object *destination;
	struct object *prospect;
	const char		*details;
	const char		*contents;
	const char		*textGo;
	int weight;
	int capacity;
	int health;
	const char 		*(*open)(void);
	const char 		*(*close)(void);
	const char 		*(*lock)(void);
	const char 		*(*unlock)(void);
	const char 		*(*turnOn)(void);
	const char 		*(*turnOff)(void);
	const char 		*(*light)(void);
	const char 		*(*extinguish)(void);
	const char 		*(*customGet)(void);
	const char 		*(*customFight)(void);
	const char 		*(*customAsk)(struct object*);
	const char 		*(*customEat)(void);
	const char 		*(*customDrink)(void);
	const char		*(*update)(void);
	int 					lightSource;
	const char 		*integrated;
} OBJECT;

extern OBJECT objs[];

- field
	description "an open field"
	tags        "field"
	lightSource	1
	details			"The field is a nice and quiet place under a clear blue sky.\n"
	capacity		9999

- cave
	description "a little cave"
	tags        "cave"
	details			"The cave is just a cold, damp, rocky chamber.\n"
	capacity		9999

- caveNo
	description "a little cave"
	tags        "cave"
	details			"The cave is just a cold, damp, rocky chamber.\n"
	capacity		9999

- silver
	description "a silver coin"
	tags        "silver", "coin", "silver coin"
	location    field
	details			"The coin has an eagle on the obverse.\n"
	customGet		{ return moveObject(silver, player); }
	weight			1
	integrated	"A silver coin glistens on the ground among the leaves."

- gold
	description "a gold coin"
	tags        "gold", "coin", "gold coin"
	location    openBox
	details			"The shiny coin seems to be a rare and priceless artifact.\n"
	weight			1

- guard
	description "a burly guard"
	tags        "guard", "burly guard"
	location    field
	details			"The guard is a really big fellow.\n"
	customFight	{	return "The guard merely raises an unamused eyebrow, and hardly notices your blows.\n";	}
	customEat		{	return "The guard looks alarmed as you open your jaw as wide as it will go, but unfortunately, it is not nearly wide enough to swallow the guard.\n";	}
	update			{ if (guard->location == field) { guard->location = cave; return "The guard paces into the cave.\n"; } else { guard->location = field; return "The guard paces into the field.\n"; }	}
	contents		"He has"
	health			100
	capacity		20

- player
	description "yourself"
	tags        "yourself"
	location    field
	details			"You would need a mirror to look at yourself.\n"
	contents		"You have"
	health			100
	capacity		20

- intoCave
	condition		{ return guard->health == 0 || silver->location == guard; }
	description "a cave entrance to the east"
	integrated	"\0"
	tags        "east", "entrance"
	location    field
	destination	cave
	details			"The entrance is just a narrow opening in a small outcrop.\n"
	textGo			"You walk into the cave.\n"
	open				isAlreadyOpen

- intoCaveBlocked
	condition		{ return guard->health > 0 && silver->location != guard; }
	description "a cave entrance to the east"
	integrated	"\0"
	tags        "east", "entrance"
	location    field
	prospect		cave
	details			"The entrance is just a narrow opening in a small outcrop.\n"
	textGo			"The guard stops you from walking into the cave.\n"
	open				isAlreadyOpen

- exitCave
	description "an exit to the west"
	integrated	"There is sunlight coming from the west."
	tags        "west", "exit"
	location    cave
	destination field
	details			"Sunlight pours in through an opening in the cave's wall.\n"
	textGo			"You walk out of the cave.\n"
	open				isAlreadyOpen

- wallField
	description "dense forest all around"
	integrated	"There is a cave entrance in the rock wall to the east, and dense forest on all other sides."
	tags        "west", "north", "south", "forest"
	location    field
	details			"The field is surrounded by trees and undergrowth.\n"
	textGo			"Dense forest is blocking the way.\n"

- wallCave
	description "solid rock all around"
	integrated	"You are surrounded on all sides by solid rock."
	tags        "east", "north", "rock"
	location    cave
	details			"Carved in stone is a secret password abccd'.\n"
	textGo			"Solid rock is blocking the way.\n"

- backroom
	description "a backroom"
	tags				"backroom"
	details			"The room is dusty and messy.\n"
	capacity		9999

- wallBackroom
	description "solid rock all around"
	integrated	"This appears to be only one exit."
	tags				"east", "west", "south", "rock"
	location		backroom
	details			"Trendy wallpaper covers the rock walls.\n"
	textGo			"Solid rock is blocking the way.\n"

- openDoorToBackroom
	description	"an open door to the south"
	integrated	"There is an open door leading into some sort of backroom to the south."
	tags				"south", "door", "doorway"
	destination	backroom
	details			"The door is open.\n"
	textGo			"You walk through the door into a backroom.\n"
	open				isAlreadyOpen
	close				{ toggleReplace(openDoorToBackroom, closedDoorToBackroom); toggleReplace(openDoorToCave, closedDoorToCave); return "You close the door.\n"; }

- closedDoorToBackroom
	description	"a closed door to the south"
	integrated	"There is a closed door to the south."
	tags				"south", "door", "doorway"
	location		cave
	prospect		backroom
	details			"The door is closed.\n"
	textGo			"The door is closed.\n"
	open				{ toggleReplace(openDoorToBackroom, closedDoorToBackroom); toggleReplace(openDoorToCave, closedDoorToCave); return "You open the door.\n"; }
	close				isAlreadyClosed

- openDoorToCave
	description	"an open door to the north"
	integrated	"There is an open door leading into a cave to your north."
	tags				"north", "door", "doorway"
	destination	cave
	details			"The door is open.\n"
	textGo			"You walk through the door into a backroom.\n"
	open				isAlreadyOpen
	close				{ return (*openDoorToBackroom->close)(); }

- closedDoorToCave
	description	"an closed door to the north"
	integrated	"There is a closed door in the north wall."
	tags				"north", "door", "doorway"
	location		backroom
	prospect		cave
	details			"The door is closed.\n"
	textGo			"The door is closed.\n"
	open				{ return (*closedDoorToBackroom->open)(); }
	close				isAlreadyClosed

- openBox
	description	"a wooden box"
	tags				"box", "wooden box"
	details			"The box is open.\n"
	weight			5
	capacity		10
	open				isAlreadyOpen
	close				{ toggleReplace(openBox, closedBox); return "You close the box.\n"; }
	lock				isStillOpen
	unlock			isAlreadyOpen

- closedBox
	description	"a wooden box"
	tags				"box", "wooden box"
	details			"The box is closed.\n"
	weight			5
	open				{ toggleReplace(openBox, closedBox); return "You open the box.\n"; }
	close				isAlreadyClosed
	lock				{ toggleReplace(lockedBox, closedBox); return "You lock the box.\n"; }
	unlock			isAlreadyUnlocked

- lockedBox
	description	"a wooden box"
	tags				"box", "wooden box"
	details			"The box is closed.\n"
	location		backroom
	weight			5
	open				isStillLocked
	close				isAlreadyClosed
	lock				isAlreadyLocked
	unlock			{ toggleReplace(lockedBox, closedBox); return "You unlock the box.\n"; }

- keyForBox
	description	"a tiny key"
	tags				"key", "tiny key"
	location		cave
	details			"The key is really small and shiny.\n"
	weight			1

- lampOff
	description	"a lamp"
	tags				"lamp"
	location		field
	details			"The lamp is off.\n"
	light				{	return lampOff->turnOn();	}
	extinguish	isAlreadyExtinguished
	turnOff			isAlreadyOff
	turnOn			{ toggleReplace(lampOn, lampOff); return "You turn on the lamp.\n"; }
	weight			5

- lampOn
	description	"a lamp"
	tags				"lamp"
	lightSource	1
	details			"The lamp is on.\n"
	light				isAlreadyLit
	extinguish	{	return lampOn->turnOff();	}
	turnOn			isAlreadyOn
	turnOff			{ toggleReplace(lampOn, lampOff); return "You turn off the lamp.\n"; }
	weight			5
